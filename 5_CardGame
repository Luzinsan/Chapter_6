#include <iostream>
#include <cstdlib>
#include <ctime>
#include <array>

enum CardRank
{
    RANK_2,
    RANK_3,
    RANK_4,
    RANK_5,
    RANK_6,
    RANK_7,
    RANK_8,
    RANK_9,
    RANK_10,
    RANK_VALET,
    RANK_LADY,
    RANK_KING,
    RANK_TUZ,
    RANK_MAX
};

enum CardSuit
{
    SUIT_TREFU,
    SUIT_BYBNU,
    SUIT_CHERVU,
    SUIT_PIKI,
    SUIT_MAX
};

struct Card 
{
    CardRank rank;//ранг
    CardSuit suit;//достоинство
};

void printCard(const Card& card)
{
    switch (card.rank) 
    {
        case RANK_2: std::cout << '2';  break;
        case RANK_3: std::cout << '3';  break;
        case RANK_4: std::cout << '4';  break;
        case RANK_5: std::cout << '5';  break;
        case RANK_6: std::cout << '6';  break;
        case RANK_7: std::cout << '7';  break;
        case RANK_8: std::cout << '8';  break;
        case RANK_9: std::cout << '9';  break;
        case RANK_10: std::cout << "10";  break;
        case RANK_VALET: std::cout << 'V';  break;
        case RANK_LADY: std::cout << 'L';  break;
        case RANK_KING: std::cout << 'K';  break;
        case RANK_TUZ: std::cout << 'T';  break;
    }
    switch (card.suit) 
    {
        case SUIT_TREFU: std::cout << "TR";  break;
        case SUIT_BYBNU: std::cout << 'B';  break;
        case SUIT_CHERVU: std::cout << "CH";  break;
        case SUIT_PIKI: std::cout << 'P';  break;
    }
}

void printDeck(const std::array<Card, 52> &deck) 
{
    for (const Card &card: deck) 
    {
        printCard(card);
        std::cout << ' ';
    }
    std::cout << '\n';
}

void swapCard(Card &card1, Card &card2) 
{
    Card temp = card1;
    card1 = card2;
    card2 = temp;
}

int getRandomNumber(int min, int max)
{
    static const double fraction = 1.0 / (static_cast<double>(RAND_MAX) + 1.0);
    // Равномерно распределяем генерацию случайного числа в диапазоне значений
    return static_cast<int>(rand() * fraction * (max - min + 1) + min);
}

void shuffleDeck(std::array<Card, 52> &deck) 
{
    for (int index = 0; index<52; ++index)  
    { 
        
        int randCard = rand() % 52;
        swapCard(deck[index], deck[randCard]);
    }

}

int main()
{
    std::array<Card, 52> deck;
    int card{0};
    for (int suit = 0; suit < SUIT_MAX; ++suit)
        for (int rank = 0; rank < RANK_MAX; ++rank)
        {
            deck[card].suit = static_cast<CardSuit>(suit);
            deck[card].rank = static_cast<CardRank>(rank);
            card++;
        }

    srand(static_cast<unsigned int>(time(0)));
    rand();

    printDeck(deck);
    shuffleDeck(deck);
    std::cout << '\n';
    printDeck(deck);
    std::cout << rand() % 52;

    return 0;
}
